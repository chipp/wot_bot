name: Publish and deploy

on:
  push:
    branches:
      - main

env:
  OWNER: chipp

jobs:
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Build and push image
        run: |
          docker buildx build . --file Dockerfile \
             --push \
             --tag ghcr.io/$OWNER/wot_bot:latest \
             --cache-from=type=registry,ref=ghcr.io/$OWNER/wot_bot:cache \
             --cache-to=type=registry,ref=ghcr.io/$OWNER/wot_bot:cache,mode=max

  deploy:
   runs-on: ubuntu-latest
   needs: push
   steps:
     - uses: actions/checkout@v2

     - name: Log into registry
       run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

     - name: Add ssh key
       run: |
         mkdir ~/.ssh/

         echo "${{ secrets.ssh_key }}" > ~/.ssh/id_rsa
         chmod -R 700 ~/.ssh/

         ssh-keyscan -H ${{ secrets.ssh_host }} > ~/.ssh/known_hosts

     - name: Copy artifacts
       run: |
         eval `ssh-agent -s`
         echo "${{ secrets.ssh_key_passphrase }}" | ssh-add ~/.ssh/id_rsa

         ssh ${{ secrets.ssh_user }}@${{ secrets.ssh_host }} \
           -i ~/.ssh/id_rsa \
           "echo test"

         scp Makefile docker-compose.yml \
           ${{ secrets.ssh_user }}@${{ secrets.ssh_host }}:web/wot_bot

     - name: Deploy wot_bot
       run: |
         eval `ssh-agent -s`
         echo "${{ secrets.ssh_key_passphrase }}" | ssh-add ~/.ssh/id_rsa

         ssh ${{ secrets.ssh_user }}@${{ secrets.ssh_host }} \
           "cd ~/web/wot_bot && make action_deploy"
